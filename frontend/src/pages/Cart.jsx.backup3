// üö® FORCE RESTART: 2025-08-14T15:21:43.393Z üö®
// üö® UNIQUE ID: 1755184903393 üö®
// üö® COMPLETELY NEW CART.JSX FILE üö®
import React, { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import Footer from "../components/Footer";
import Navbar from "../components/Navbar";
import api from "../utils/api";
import { getImageUrl } from "../utils/imageUtils";

const Cart = () => {
  console.log("üö® FORCE RESTART TEST - Cart component loaded at", new Date().toISOString());
  console.log("üö® UNIQUE ID: 1755184903393 üö®");
  console.log("üö® COMPLETELY NEW CART.JSX FILE CREATED üö®");
  
  const [cart, setCart] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");
  const navigate = useNavigate();

  useEffect(() => {
    const token = localStorage.getItem("token");
    if (!token) {
      navigate("/login");
      return;
    }
    
    console.log('üö® FORCE RESTART: Fetching cart data...');
    console.log('üö® UNIQUE ID: 1755184903393 - This should be different every time!');
    
    api.get("/cart")
      .then(res => {
        console.log('=== CART DATA DEBUG ===');
        console.log('üö® FORCE RESTART: Cart data received:', res.data);
        console.log('üö® UNIQUE ID: 1755184903393');
        console.log('Cart data length:', res.data.length);
        
        if (res.data.length > 0) {
          console.log('First item details:');
          console.log('  - cart_id:', res.data[0].cart_id);
          console.log('  - product_name:', res.data[0].product_name);
          console.log('  - image_id:', res.data[0].image_id);
          console.log('  - main_image_id:', res.data[0].main_image_id);
          console.log('  - product_id:', res.data[0].product_id);
          console.log('  - variant_id:', res.data[0].variant_id);
          
          // Test getImageUrl function
          const testImageId = res.data[0].image_id || res.data[0].main_image_id;
          if (testImageId) {
            console.log('Testing getImageUrl function:');
            console.log('  - Input image ID:', testImageId);
            console.log('  - Generated URL:', getImageUrl(testImageId));
          } else {
            console.log('‚ùå NO IMAGE ID FOUND!');
            console.log('  - image_id is:', res.data[0].image_id);
            console.log('  - main_image_id is:', res.data[0].main_image_id);
          }
        } else {
          console.log('‚ùå Cart is empty!');
        }
        console.log('=== END CART DEBUG ===');
        
        setCart(res.data);
        setLoading(false);
      })
      .catch(err => {
        console.error('Error fetching cart:', err);
        setError("Gagal memuat keranjang");
        setLoading(false);
      });
  }, [navigate]);

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600 mx-auto"></div>
          <p className="mt-4 text-gray-600">Memuat keranjang...</p>
          <p className="text-xs text-red-500 mt-2">üö® FORCE RESTART: Unique ID 1755184903393</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <p className="text-red-600 text-lg">{error}</p>
          <p className="text-xs text-red-500 mt-2">üö® FORCE RESTART: Unique ID 1755184903393</p>
        </div>
      </div>
    );
  }

  if (cart.length === 0) {
    return (
      <div className="min-h-screen bg-gray-50">
        <Navbar />
        <div className="container mx-auto px-4 py-8">
          <div className="text-center">
            <h1 className="text-3xl font-bold text-gray-800 mb-4">Keranjang Belanja</h1>
            <p className="text-gray-600 mb-8">Keranjang belanja Anda kosong</p>
            <button
              onClick={() => navigate("/katalog")}
              className="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition"
            >
              Mulai Belanja
            </button>
            <p className="text-xs text-red-500 mt-4">üö® FORCE RESTART: Unique ID 1755184903393</p>
          </div>
        </div>
        <Footer />
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <Navbar />
      <div className="container mx-auto px-4 py-8">
        <h1 className="text-3xl font-bold text-gray-800 mb-8">Keranjang Belanja</h1>
        <p className="text-xs text-red-500 mb-4">üö® FORCE RESTART: Unique ID 1755184903393</p>
        
        <div className="bg-white rounded-xl shadow p-6 border border-blue-100">
          <h2 className="text-xl font-semibold mb-6">Item Keranjang</h2>
          
          <div className="space-y-4">
            {cart.map((item) => {
              console.log(`üö® FORCE RESTART: Rendering cart item: ${item.product_name}`, {
                image_id: item.image_id,
                main_image_id: item.main_image_id,
                unique_id: 1755184903393
              });
              
              return (
                <div key={item.cart_id} className="border border-gray-200 rounded-lg p-4 flex items-center gap-4">
                  {/* Gambar Produk */}
                  <div className="w-16 h-16 bg-white rounded-lg border-2 border-blue-200 flex items-center justify-center overflow-hidden flex-shrink-0">
                    {(item.image_id || item.main_image_id) ? (
                      <img
                        src={getImageUrl(item.image_id || item.main_image_id)}
                        alt={item.product_name}
                        className="w-full h-full object-cover"
                        onLoad={() => {
                          console.log(`üö® FORCE RESTART: ‚úÖ Image loaded successfully for product: ${item.product_name}`);
                          console.log(`üö® UNIQUE ID: 1755184903393`);
                        }}
                        onError={(e) => {
                          console.log(`üö® FORCE RESTART: ‚ùå Image failed to load for product: ${item.product_name}`);
                          console.log(`üö® UNIQUE ID: 1755184903393`);
                          console.log(`   - image_id: ${item.image_id}`);
                          console.log(`   - main_image_id: ${item.main_image_id}`);
                          e.target.style.display = 'none';
                          e.target.nextSibling.style.display = 'flex';
                        }}
                      />
                    ) : null}
                    <div className="w-full h-full flex items-center justify-center text-gray-400 text-lg" style={{ display: (item.image_id || item.main_image_id) ? 'none' : 'flex' }}>
                      {item.product_name ? item.product_name.charAt(0).toUpperCase() : 'üì∑'}
                    </div>
                  </div>
                  
                  {/* Informasi Produk */}
                  <div className="flex-1">
                    <h3 className="font-semibold text-lg text-black">{item.product_name}</h3>
                    {item.size && <p className="text-sm text-gray-600">Ukuran: {item.size}</p>}
                    <p className="text-sm text-gray-600">Berat: {item.weight}g</p>
                    
                    {/* Debug info - Make it very visible */}
                    <div className="text-xs text-red-500 font-bold bg-yellow-100 p-2 rounded mt-2 border-2 border-red-500">
                      üö® FORCE RESTART: üîç DEBUG: img_id={item.image_id || 'NULL'}, main_img_id={item.main_image_id || 'NULL'}
                      <br />
                      üö® UNIQUE ID: 1755184903393
                    </div>
                  </div>
                  
                  {/* Quantity and Price */}
                  <div className="text-right">
                    <div className="flex items-center gap-2 mb-2">
                      <button className="w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center hover:bg-gray-300 transition">-</button>
                      <span className="w-12 text-center">{item.quantity}</span>
                      <button className="w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center hover:bg-gray-300 transition">+</button>
                    </div>
                    <p className="text-sm text-gray-500">Stok: {item.stock_quantity}</p>
                    <p className="font-semibold text-blue-600">Rp{item.price.toLocaleString()}</p>
                    <p className="text-lg font-bold">Total: Rp{(item.price * item.quantity).toLocaleString()}</p>
                  </div>
                  
                  {/* Action */}
                  <button className="text-red-600 hover:text-red-800 transition px-4 py-2 border border-red-600 rounded hover:bg-red-50">
                    Hapus
                  </button>
                </div>
              );
            })}
          </div>
          
          {/* Cart Summary */}
          <div className="mt-6 pt-4 border-t border-gray-200">
            <div className="text-center">
              <p className="text-gray-600">
                Total: <span className="font-semibold text-blue-600">Rp{cart.reduce((total, item) => total + (item.price * item.quantity), 0).toLocaleString()}</span>
              </p>
              <p className="text-sm text-gray-500 mt-2">{cart.length} item di keranjang</p>
              <p className="text-xs text-red-500 mt-2">üö® FORCE RESTART: Unique ID 1755184903393</p>
            </div>
            
            <div className="flex gap-4 mt-4 justify-center">
              <button className="bg-red-600 text-white px-6 py-3 rounded-lg hover:bg-red-700 transition">
                Kosongkan Keranjang
              </button>
              <button className="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition font-semibold">
                Pilih Item untuk Checkout
              </button>
            </div>
          </div>
        </div>
      </div>
      <Footer />
    </div>
  );
};

export default Cart;